version: '3'

networks:
  laravel:

services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "8080:80"
      - "8090:8090"
    volumes:
      - ./src/api:/var/www/api:delegated
      - ./src/frontend:/var/www/frontend:delegated
    depends_on:
      - php
      - redis
      - postgres
    networks:
      - laravel

  postgres:
    image: postgres:14.0-alpine
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data:delegated
      - ./dockerfiles/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:delegated
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./src/api:/var/www/api:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  composer:
    user: ${UID:-1000}:${GID:-1000}
    image: composer:2.5.1
    volumes:
      - ./src/api:/var/www/api:delegated
    working_dir: /var/www/api
    depends_on:
      - php
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src/api:/var/www/api:delegated
    depends_on:
      - postgres
    working_dir: /var/www/api  
    entrypoint: [ 'php', '/var/www/api/artisan' ]
    networks:
      - laravel

  npm:
    image: node:14.17.6-alpine
    working_dir: /var/www/frontend
    volumes:
      - ./src/frontend:/var/www/frontend
    entrypoint: [ 'npm' ]